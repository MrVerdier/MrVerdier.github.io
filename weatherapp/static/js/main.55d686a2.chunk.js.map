{"version":3,"sources":["components/Weather/FiveDayWeather.js","components/Weather/SearchBar.js","components/Weather/CurrentWeather.js","components/Weather/WeatherPage.js","components/Home/Twitter.js","components/Home/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["FiveDayWeather","props","getWeather","e","a","preventDefault","city","target","elements","value","fetch","then","res","json","result","setState","isLoaded","weather","error","groupBy","list","keyGetter","map","Map","forEach","item","key","collection","get","push","set","state","sort","b","dt_txt","meta","this","grouped","slice","date","Date","prototype","yyyymmdd","dayNumber","mm","getMonth","dd","getDate","getFullYear","join","day0","day1","day2","message","className","name","country","id","days","details","src","icon","alt","description","main","temp","React","Component","SearchBar","onSubmit","type","placeholder","CurrentWeather","undefined","toDateString","sys","desc","temp_min","temp_max","wind","speed","deg","windDirection","compass","WeatherPage","to","exact","path","component","Twitter","sourceType","screenName","options","height","Home","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55d686a2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default class FiveDayWeather extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          weather: []\r\n        };\r\n      }\r\n\r\n    componentDidMount() {\r\n\r\n      let cityName = 'Copenhagen'\r\n\r\n     fetch('https://api.openweathermap.org/data/2.5/forecast?q=' + cityName + '&units=metric&APPID=e17ae4e6ebd942a7b4d387b014a9ce3e')\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            const weather = result.list.sort((a, b) => {\r\n              return a.dt_txt - b.dt_txt\r\n            })\r\n            this.setState({\r\n              isLoaded: true,\r\n              weather,\r\n              meta: result\r\n            });\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n      )\r\n    }\r\n\r\n    \r\n    getWeather = async (e) => {\r\n      e.preventDefault()\r\n      let city = e.target.elements.city.value \r\n     \r\n      \r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=e17ae4e6ebd942a7b4d387b014a9ce3e`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            weather: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n\r\n\r\n    groupBy = (list, keyGetter) => {\r\n      const map = new Map();\r\n      list.forEach((item) => {\r\n           const key = keyGetter(item);\r\n           const collection = map.get(key);\r\n           if (!collection) {\r\n               map.set(key, [item]);\r\n           } else {\r\n               collection.push(item);\r\n           }\r\n      });\r\n      return map;\r\n  }\r\n\r\n    render() {\r\n      const { error, isLoaded, weather, meta } = this.state;\r\n      const grouped = this.groupBy(weather, weather=>weather.dt_txt.slice(0, 10))\r\n      const date = new Date()\r\n      \r\n      Date.prototype.yyyymmdd = function(dayNumber) {\r\n        var mm = this.getMonth() + 1; // getMonth() is zero-based\r\n        let dd = date.getDate() + dayNumber;\r\n\r\n        return [this.getFullYear(),\r\n                (mm>9 ? '-' : '0') + mm,\r\n                (dd>9 ? '-' : '0') + dd\r\n               ].join('');\r\n      };\r\n\r\n      // let loopDates = function() {  \r\n      //   let i\r\n      //   let values = []\r\n      //   for (i = 0; i < 6; i++) {\r\n      //     values.push(date.yyyymmdd(i))\r\n      //   } \r\n      //   return values\r\n      // }\r\n\r\n      // console.log(loopDates())\r\n\r\n      // loopDates().map(dates => {\r\n      //   console.log(grouped.get(dates))\r\n      // })\r\n\r\n    // Days - It is DRY I know....\r\n    const day0 = grouped.get(date.yyyymmdd(0))\r\n    const day1 = grouped.get(date.yyyymmdd(1))\r\n    const day2 = grouped.get(date.yyyymmdd(2))\r\n    // const day3 = grouped.get(date.yyyymmdd(3))\r\n    // const day4 = grouped.get(date.yyyymmdd(4))\r\n    // const day5 = grouped.get(date.yyyymmdd(5))\r\n\r\n\r\n        if (error) {\r\n          return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n          return <div>Loading...</div>;\r\n        } else {\r\n          return (\r\n            <div>\r\n              <h1>3-Day Forecast</h1>\r\n              <div className=\"weather-box forecast-box\">\r\n                <span>Location: </span><h2> {meta.city.name} {meta.city.country}</h2>\r\n              </div>\r\n        \r\n\r\n            <div id=\"forecastWeather\"> \r\n                <div className=\"forecast-container\">\r\n                  <h3>{date.yyyymmdd(0)}</h3>\r\n                  <div className=\"weather-box-container forecast-box\">\r\n                    <div className=\"weather-box\">\r\n                    {day0.map(days => ( \r\n                      <div>\r\n                        {days.dt_txt.slice(11, 19)}\r\n                        {days.weather.map(details => (\r\n                          <div className=\"weather-box-inner\">\r\n                            <img src={'http://openweathermap.org/img/wn/' + details.icon + '@2x.png'} alt=\"\"></img>\r\n                            <h3>{details.description}</h3>\r\n                            <p>Temp:<br /><span>{days.main.temp}</span> &#8451;</p>\r\n                          </div>\r\n                        ))}\r\n                        <hr/>\r\n                      </div>\r\n                    ))}\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"forecast-container\">\r\n                <h3>{date.yyyymmdd(1)}</h3>\r\n                <div className=\"weather-box-container forecast-box\">\r\n                  <div className=\"weather-box\">\r\n                  {day1.map(days => ( \r\n                    <div>\r\n                      {days.dt_txt.slice(11, 19)}\r\n                      {days.weather.map(details => (\r\n                        <div className=\"weather-box-inner\">\r\n                          <img src={'http://openweathermap.org/img/wn/' + details.icon + '@2x.png'} alt=\"\"></img>\r\n                          <h3>{details.description}</h3>\r\n                          <p>Temp:<br /><span>{days.main.temp}</span> &#8451;</p>\r\n                        </div>\r\n                      ))}\r\n                      <hr/>\r\n                    </div>\r\n                  ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"forecast-container\">\r\n                <h3>{date.yyyymmdd(2)}</h3>\r\n                <div className=\"weather-box-container forecast-box\">\r\n                  <div className=\"weather-box\">\r\n                  {day2.map(days => ( \r\n                    <div>\r\n                      {days.dt_txt.slice(11, 19)}\r\n                      {days.weather.map(details => (\r\n                        <div className=\"weather-box-inner\">\r\n                          <img src={'http://openweathermap.org/img/wn/' + details.icon + '@2x.png'} alt=\"\"></img>\r\n                          <h3>{details.description}</h3>\r\n                          <p>Temp:<br /><span>{days.main.temp}</span> &#8451;</p>\r\n                        </div>\r\n                      ))}\r\n                      <hr/>\r\n                    </div>\r\n                  ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          );\r\n        }\r\n      }\r\n    }","import React from 'react'\r\n\r\nexport default class SearchBar extends React.Component {\r\n\r\n    render(){\r\n\r\n        return(\r\n            <form onSubmit={this.props.getWeather}>\r\n                <input type=\"text\" name=\"city\" placeholder=\"Search for a city\"></input>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { WiStrongWind, WiTornado } from 'react-icons/wi'\r\nimport SearchBar from './SearchBar'\r\n\r\n\r\nexport default class CurrentWeather extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        city: undefined,\r\n        weather: []\r\n      };\r\n    }\r\n\r\n  componentDidMount(){\r\n      fetch(\"https://api.openweathermap.org/data/2.5/weather?q=Copenhagen&units=metric&APPID=e17ae4e6ebd942a7b4d387b014a9ce3e\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            weather: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n    \r\n\r\n    getWeather = async (e) => {\r\n      e.preventDefault()\r\n      let city = e.target.elements.city.value \r\n     \r\n      \r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=e17ae4e6ebd942a7b4d387b014a9ce3e`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            weather: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    function compass() {\r\n      let windDirection = weather.wind.deg\r\n      if (windDirection == 360 && windDirection == 0) {\r\n        return \"N\"\r\n      } else if (windDirection > 0 && windDirection < 90){\r\n        return \"NE\"\r\n      } else if (windDirection == 90) {\r\n        return \"E\"\r\n      } else if (windDirection > 90 && windDirection < 180){\r\n        return \"SE\"\r\n      } else if (windDirection == 180) {\r\n        return \"S\"\r\n      } else if (windDirection > 180 && windDirection < 270) {\r\n        return \"SW\"\r\n      } else if (windDirection == 270) {\r\n        return \"W\"\r\n      } else if (windDirection > 270 && windDirection < 360) {\r\n        return \"NW\"\r\n      } else {\r\n        return \"Wrong data\"\r\n      }\r\n   }\r\n\r\n      const { error, isLoaded, weather } = this.state;\r\n      let ts = new Date();\r\n      let date = ts.toDateString()\r\n\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>\r\n        <SearchBar getWeather={this.getWeather}/>\r\n        <div>Please Search</div>\r\n        </div>;\r\n      } else {\r\n        return (\r\n          <div>\r\n          <SearchBar getWeather={this.getWeather}/>\r\n            <div className=\"weather-box current-box\">\r\n              <span>Location: </span><h2>{weather.name} {weather.sys.country}</h2>\r\n            </div>\r\n            <h4>Generel:</h4> \r\n            <div id=\"currentWeather\" className=\"weather-box  current-box\"> \r\n              <div>{date}</div>\r\n                {weather.weather.map(desc => (\r\n                  <div className=\"weather-box-inner-current\">\r\n                    <img src={'http://openweathermap.org/img/wn/' + desc.icon + '@2x.png'}></img>\r\n                    <div>\r\n                      <h3>{desc.main}</h3>\r\n                      <p>Min. <span>{weather.main.temp_min}</span> &#8451;</p>\r\n                      <p>Max.<span>{weather.main.temp_max}</span> &#8451;</p>\r\n                    </div>\r\n                    <div>\r\n                      <h2>{weather.main.temp} &#8451;</h2>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <h4>Wind:</h4>\r\n            <div className=\"weather-box  current-box\">\r\n              <div className=\"wind-box\">\r\n                <div>\r\n                  <div>Wind Speed: <strong>{weather.wind.speed}</strong> m/s</div>\r\n                  <div>Direction:  <strong>{weather.wind.deg} deg. {compass()}</strong> </div>\r\n                </div>\r\n                {weather.wind.speed > 6 ? <span><WiTornado /></span> : <span><WiStrongWind /></span>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport FiveDayWeather from './FiveDayWeather'\r\nimport CurrentWeather from './CurrentWeather'\r\n\r\n\r\n\r\n\r\nexport default class WeatherPage extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n\r\n      <Router>\r\n      <div>\r\n        <nav className=\"sub-nav\">\r\n          <ul>\r\n            <div>\r\n              <Link to=\"/\">Current</Link>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/FiveDayWeather\">Forecast</Link>\r\n            </div>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      <div className=\"page\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={CurrentWeather}>\r\n            <CurrentWeather /> \r\n          </Route>\r\n          <Route exact path=\"/FiveDayWeather\" component={FiveDayWeather}></Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    \r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\r\n\r\nexport default class Twitter extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                 <TwitterTimelineEmbed\r\n                sourceType=\"dmidk\"\r\n                screenName=\"dmidk\"\r\n                options={{height: 450}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport CurrentWeather from '../Weather/CurrentWeather'\r\nimport SearchBar from '../Weather/SearchBar'\r\nimport Twitter from './Twitter'\r\n\r\nexport default class Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page\">\r\n            <SearchBar />\r\n            <h1>Current Weather</h1>\r\n            <div id=\"homepageContent\">\r\n                <CurrentWeather />\r\n                <Twitter />\r\n            </div>\r\n           </div>\r\n           \r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport WeatherPage from './components/Weather/WeatherPage';\r\nimport Home from './components/Home/Homepage';\r\nimport CurrentWeather from './components/Weather/CurrentWeather'\r\nimport Twitter from './components//Home/Twitter'\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n    return (\r\n      <Router basename=\"weatherapp\">\r\n        <div>\r\n          <nav className=\"main-nav\">\r\n            <ul>\r\n              <div>\r\n                <Link to=\"/\">Home</Link>\r\n              </div>\r\n              <div>                \r\n                <Link to=\"/weather\">Weather</Link>\r\n              </div>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home}>\r\n          <div className=\"page\">\r\n            <h1>Current Weather</h1>\r\n            <div id=\"homepageContent\">\r\n                <CurrentWeather />\r\n                <Twitter />\r\n            </div>\r\n           </div>\r\n        </Route>\r\n        <Route exact path=\"/weather\" component={WeatherPage}></Route>\r\n      </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}